@model FilterTracker.Models.BuildCaseTaskEditorModel

<a data-toggle="collapse" href="#demographics-container" role="button" aria-expanded="true" aria-controls="demographics-cointainer">
	Toggle Demographics
</a>
<div class="collapse show p-2 border-dark" id="demographics-container">
	<div class="card card-body">
		<div class="container">
			<div class="row" style="line-height: 1.0em;">
				<div class="col-6">
					<span class="text-white-50 text-right">Name:</span>
					<span class="text-white text-left ml-2"><a href="/Home/EditPatient/@Model.Patient.Id">@Model.Patient.FullName</a></span>
				</div>
				<div class="col-6">
					<span class="text-white-50 text-right">MRN:</span>
					<span class="text-white text-left ml-2">@Model.Patient.MRN</span>
				</div>
			</div>
			<div class="row">
				<div class="col-6">
					<span class="text-white-50 text-right">Birthdate:</span>
					<span class="text-white text-left ml-2">@Model.Patient.DateOfBirth.ToShortDateString()</span>
				</div>
				<div class="col-6">
					<span class="text-white-50 text-right">Gender:</span>
					@if (Model.Patient.Gender.HasValue)
					{
						if (Model.Patient.Gender.Value == 1)
						{
							<span class="text-white text-left ml-2">Male</span>
						}
						else
						{
							<span class="text-white text-left ml-2">Female</span>
						}
					}
				</div>
			</div>

			<div class="row">
				<div class="col-6">
					<span class="text-white-50 text-right">Primary Phone Number:</span>
					<span class="text-white text-left ml-2">@Model.Patient.PrimaryPhoneNumber</span>
				</div>
				<div class="col-6">
					<span class="text-white-50 text-right">Primary Email:</span>
					<span class="text-white text-left ml-2">@Model.Patient.PrimaryEmailAddress</span>
				</div>
			</div>

			<div class="row">
				<div class="col-5 text-white-50 text-left">
					<a href="/Home/EditPatientFilter/@Model.PatientFilter.Id">Filter Information</a>
				</div>
			</div>
			<div class="row">
				<div class="col-4 text-white text-left ml-2">
					<span class="text-white">Model:</span>
					<span class="text-white-50 ml-1">
						@if (Model.PatientFilter.Filter != null)
						{
							@Model.PatientFilter.Filter.Name
						}
					</span>
				</div>
				<div class="col-4 text-white text-left ml-2">
					<span>Insertion Date:</span>
					<span class="text-white-50 ml-1">@Model.PatientFilter.ProcedureDate.Value.ToShortDateString()</span>
				</div>
			</div>
			<div class="row">
				<div class="col-8 text-white text-left ml-2">
					@if (Model.PatientFilter.PrimaryCarePhysician != null && Model.PatientFilter.PrimaryCarePhysicianId.HasValue)
					{
						<span>PCP:</span><span class="text-white-50 ml-2">@Model.PatientFilter.PrimaryCarePhysician.Name</span>
						<span class="text-white-50 ml-1">@Model.PatientFilter.PrimaryCarePhysician.Phone</span>
						<span class="text-white-50 ml-1">@Model.PatientFilter.PrimaryCarePhysician.Email</span>
					}
					else
					{
						<span>PCP:</span>
					}
				</div>
			</div>
			<div class="row">
				<div class="col-8 text-white text-left ml-2">
					@if (Model.PatientFilter.OrderingPhysician != null && Model.PatientFilter.OrderingPhysicianId.HasValue)
					{
						<span>Ordering Physician:</span><span class="text-white-50 ml-2">@Model.PatientFilter.OrderingPhysician.Name</span>
						<span class="text-white-50 ml-1">@Model.PatientFilter.OrderingPhysician.Phone</span>
						<span class="text-white-50 ml-1">@Model.PatientFilter.OrderingPhysician.Email</span>
					}
					else
					{
						<span>Ordering Physician:</span>
					}
				</div>
			</div>
			<div class="row">
				<div class="col-8 text-white text-left ml-2">
					@if (Model.PatientFilter.ProcedurePhysician != null && Model.PatientFilter.ProcedurePhysicianId.HasValue)
					{
						<span>IVC Filter Placed By:</span><span class="text-white-50 ml-2">@Model.PatientFilter.ProcedurePhysician.LastName, @Model.PatientFilter.ProcedurePhysician.FirstName</span>
					}
					else
					{
						<span>IVC Filter Placed By:</span>
					}
				</div>
			</div>
		</div>
	</div>
</div>

<ul class="nav nav-pills mb-3 mt-3" id="pills-tab" role="tablist">
	<li class="nav-item">
		<a class="nav-link active" id="patient-survey-tab" data-toggle="pill" href="#patient-survey" role="tab" aria-controls="patient-survey" aria-selected="true">Patient Survey</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" id="physician-survey-tab" data-toggle="pill" href="#physician-survey" role="tab" aria-controls="physician-survey" aria-selected="false">PCP Survey</a>
	</li>
	<li class="nav-item">
		<a class="nav-link" id="attachments-tab" data-toggle="pill" href="#attachments" role="tab" aria-controls="attachments" aria-selected="false">Attachments</a>
	</li>
</ul>
<div class="tab-content" id="pills-tabContent">
	<div class="tab-pane fade show active" id="patient-survey" role="tabpanel" aria-labelledby="patient-survey-tab">
		<div class="container mb-2">
			@if (Model.PatientFilter.PatientContactAttempts != null && Model.PatientFilter.PatientContactAttempts.Any())
			{
				<div class="row">
					<div class="container">
						<div class="row">
							<div class="col-2 text-sm-center">Contact Date</div>
							<div class="col-2 text-sm-center">Contact Type</div>
							<div class="col-2 text-sm-center">Result</div>
							<div class="col-6 text-sm-left">Notes</div>
						</div>
						@foreach (var item in Model.PatientFilter.PatientContactAttempts.OrderByDescending(n => n.Timestamp))
						{
							<div class="row">
								<div class="col-2 text-sm-center">@item.Timestamp.ToShortDateString()</div>
								<div class="col-2 text-sm-center">@item.ContactType.Name</div>
								<div class="col-2 text-sm-center">@item.ContactResultCode.ResultCode</div>
								<div class="col-6 text-sm-left">@item.Notes</div>
							</div>
						}
					</div>
				</div>
			}
			<form id="patient-contact-form">
				<div class="row row-cols-8">
					<div class="form-group col">
						<label for="contact-type">Contact Method</label>
						@Html.DropDownListFor(m => m.SelectedContactType, Model.ContactAttemptTypes, new { @class = "form-control margin-bottom-5", id = "contact-type" })
						<span>@Html.ValidationMessageFor(m => m.SelectedContactType, "", new { @class = "text-danger" })</span>
					</div>
				</div>
				<div class="row row-cols-8">
					<div class="form-group col">
						<label for="result-code">Contact Result</label>
						@Html.DropDownListFor(m => m.SelectedResultCode, Model.ResultCodeTypes, new { @class = "form-control margin-bottom-5", id = "result-code" })
						<span>@Html.ValidationMessageFor(m => m.SelectedResultCode, "", new { @class = "text-danger" })</span>
					</div>
				</div>
				<div class="row row-cols-8">
					<div class="form-group col-8">
						<label for="Note">Contact Notes</label>
						@Html.TextBoxFor(m => m.Note, new { @class = "form-control margin-bottom-5", id = "contact-note", style = "width: 100%" })
						<span>@Html.ValidationMessageFor(m => m.Note, "", new { @class = "text-danger" })</span>
					</div>
				</div>
			</form>
		</div>

		<hr />
		@foreach (var item in Model.PatientQuestions)
		{
			<p>@item.Question</p>
			<p>
				@{
					string response = "";
					var pqr = Model.PatientQuestionResponses.SingleOrDefault(sd => sd.QuestionId == item.Id);
					if (pqr != null)
					{
						response = pqr.Response;
					}
				}
				<input type="text" class="form-control question-response-patient" data-question-id="@item.Id" value="@response">
			</p>
		}
	</div>

	<div class="tab-pane fade" id="physician-survey" role="tabpanel" aria-labelledby="physician-survey-tab">
		<div class="container">
			<div class="row row-cols-8">
				<div class="form-group col">
					<label for="contact-type">Contact Method</label>
					@Html.DropDownListFor(m => m.SelectedPhysicianContactType, Model.ContactAttemptTypes, new { @class = "form-control margin-bottom-5", id = "physician-contact-type" })
					<span>@Html.ValidationMessageFor(m => m.SelectedPhysicianContactType, "", new { @class = "text-danger" })</span>
				</div>
			</div>
			<div class="row row-cols-8">
				<div class="form-group col">
					<label for="result-code">Contact Result</label>
					@Html.DropDownListFor(m => m.SelectedPhysicianContactResultCode, Model.ResultCodeTypes, new { @class = "form-control margin-bottom-5", id = "physician-result-code" })
					<span>@Html.ValidationMessageFor(m => m.SelectedPhysicianContactResultCode, "", new { @class = "text-danger" })</span>
				</div>
			</div>
			<div class="row row-cols-8">
				<div class="form-group col-8">
					<label for="Note">Contact Notes</label>
					@Html.TextBoxFor(m => m.PhysicianContactNote, new { @class = "form-control margin-bottom-5", id = "physician-contact-note", rows = "6", cols = "500" })
					<span>@Html.ValidationMessageFor(m => m.PhysicianContactNote, "", new { @class = "text-danger" })</span>
				</div>
			</div>
		</div>
		<hr />
		@foreach (var item in Model.PhysicianQuestions)
		{
			<p>@item.Question</p>
			<p>
				@{
					string response = "";
					var pqr = Model.PhysicianQuestionResponses.SingleOrDefault(sd => sd.QuestionId == item.Id);
					if (pqr != null)
					{
						response = pqr.Response;
					}
				}
				<input type="text" class="form-control question-response-physician" data-question-id="@item.Id" value="@response">
			</p>
		}
	</div>
	<div class="tab-pane fade" id="attachments" role="tabpanel" aria-labelledby="attachments-tab">
		@using (Html.BeginForm("UploadTaskAttachment", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "UploadTaskAttachment" }))
		{
			@Html.AntiForgeryToken()
			@Html.ValidationSummary()
			<input type="hidden" id="taskId" name="taskId" value="@Model.TaskId" />

			<table class="table" style="font-size: 0.9em" id="files-table">
				<tr>
					<th>Filename</th>
					<th>Uploaded</th>
					<th>Size</th>
					<th></th>
				</tr>
				@if (!Model.TaskAttachments.Any())
				{
					<tr id="tr-placeholder"><td colspan="5" align="center">No attachments were found.</td></tr>
				}
				else
				{
					foreach (var item in Model.TaskAttachments)
					{
						<tr id="task-attachment-@item.Id">
							<td align="left">@item.Filename</td>
							<td align="left">@item.DateUploaded</td>
							<td align="left">@item.Size</td>
							<td><a href="#" class="btn btn-sm btn-secondary" onclick="DeleteAttachment(@item.Id);">Delete</a></td>
						</tr>
					}
				}
			</table>
			<hr />
			<div>
				<div class="float-left"><label for="upload" style="white-space: nowrap; margin-right: 10px;">Choose file to upload:</label></div>
				<div class="float-left"><input type="file" id="upload" name="file" class="" accept="application/pdf, application/msword, image/png, image/jpeg" style="width: 400px; margin-right: 10px;" /></div>
				<div class="float-left"><input type="button" id="btnSubmit" value="Upload" onclick="UploadFile();" class="" width="40" /></div>
				<div style="clear: both;">&nbsp;</div>
			</div>

		}
	</div>
</div>
